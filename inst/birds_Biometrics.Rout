
R version 2.9.0 (2009-04-17)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("mboost")
Loading required package: modeltools
Loading required package: stats4
Loading required package: party
Loading required package: survival
Loading required package: splines
Loading required package: grid
Loading required package: coin
Loading required package: mvtnorm
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 as.Date.numeric 

Loading required package: sandwich
Loading required package: strucchange
Loading required package: vcd
Loading required package: MASS
Loading required package: colorspace
> data("birds", package = "mboost")
> 
> # define characteristics of the boosting algorithm
> bcr <- boost_control(mstop=200, trace=TRUE)
> 
> # estimation of a purely linear GLM
> fm <- SG5 ~ bols(GST) + bols(DBH) + bols(AOT) + bols(AFS) + bols(DWC) +
+             bols(LOG)
> sp <- gamboost(fm, data = birds, family = Poisson(), control = bcr)
[   1] ...................................... -- risk: 513.8498 
[  41] ...................................... -- risk: 511.9819 
[  81] ...................................... -- risk: 511.5567 
[ 121] ...................................... -- risk: 511.4191 
[ 161] ......................................
Final risk: 511.371 
> 
> # extract and plot AIC curve against iteration index and determine stopping
> # iteration
> birdsaic <- AIC(sp, "classical")
> plot(birdsaic)
> ms <- mstop(birdsaic)
> 
> # selection frequencies of the model terms
> table(sp$ensemble[1:ms])

 1  3  4  5  6 
 5 37 42 10  6 
> 
> # estimated coefficients
> coef(sp[ms])
$`bols(GST)`
 (Intercept)            x 
 0.109426781 -0.000384797 

$`bols(DBH)`
[1] NA

$`bols(AOT)`
 (Intercept)            x 
 0.475943029 -0.003117553 

$`bols(AFS)`
 (Intercept)            x 
-0.880133716  0.005976505 

$`bols(DWC)`
 (Intercept)            x 
-0.025194164  0.004709208 

$`bols(LOG)`
 (Intercept)            x 
 0.070806231 -0.003401209 

attr(,"offset")
[1] 0.9558096
> 
> # re-define boosting iterations
> bcr <- boost_control(mstop=500, trace=TRUE)
> 
> # Variable selection in a GLM without spatial component
> fm <- SG4 ~ bols(GST) + bols(DBH) + bols(AOT) + bols(AFS) + bols(DWC) +
+             bols(LOG)
> sp <- gamboost(fm, data = birds, family = Poisson(), control = bcr)
[   1] ...................................... -- risk: 143.4116 
[  41] ...................................... -- risk: 137.5460 
[  81] ...................................... -- risk: 134.0713 
[ 121] ...................................... -- risk: 132.0492 
[ 161] ...................................... -- risk: 130.8501 
[ 201] ...................................... -- risk: 130.0634 
[ 241] ...................................... -- risk: 129.5066 
[ 281] ...................................... -- risk: 129.1017 
[ 321] ...................................... -- risk: 128.7942 
[ 361] ...................................... -- risk: 128.5561 
[ 401] ...................................... -- risk: 128.3694 
[ 441] ...................................... -- risk: 128.2211 
[ 481] ..................
Final risk: 128.1585 
> table(sp$ensemble)

  1   2   4   5   6 
138  50 162  51  99 
> coef(sp)[1:6]
$`bols(GST)`
 (Intercept)            x 
 1.072597658 -0.004082068 

$`bols(DBH)`
(Intercept)           x 
 0.69775197 -0.01471877 

$`bols(AOT)`
[1] NA

$`bols(AFS)`
(Intercept)           x 
-2.18229171  0.01392804 

$`bols(DWC)`
  (Intercept)             x 
 0.0008540723 -0.0053814590 

$`bols(LOG)`
 (Intercept)            x 
 0.046716307 -0.005200858 

> 
> # Variable selection in a GLM with high df spatial component
> fm <- SG4 ~ bols(GST) + bols(DBH) + bols(AOT) + bols(AFS) + bols(DWC) +
+             bols(LOG) + bspatial(x_gk, y_gk, df=5, differences=1, xknots=12,
+               yknots=12)
> sp <- gamboost(fm, data = birds, family = Poisson(), control = bcr)
[   1] ...................................... -- risk: 138.5934 
[  41] ...................................... -- risk: 129.9295 
[  81] ...................................... -- risk: 124.4883 
[ 121] ...................................... -- risk: 120.7605 
[ 161] ...................................... -- risk: 117.7883 
[ 201] ...................................... -- risk: 115.2960 
[ 241] ...................................... -- risk: 113.1813 
[ 281] ...................................... -- risk: 111.3114 
[ 321] ...................................... -- risk: 109.6022 
[ 361] ...................................... -- risk: 108.1198 
[ 401] ...................................... -- risk: 106.7393 
[ 441] ...................................... -- risk: 105.4751 
[ 481] ..................
Final risk: 104.8947 
> table(sp$ensemble)

  1   2   7 
 25  13 462 
> coef(sp)[1:6]
$`bols(GST)`
 (Intercept)            x 
 0.264258243 -0.001009389 

$`bols(DBH)`
 (Intercept)            x 
 0.250991232 -0.005190183 

$`bols(AOT)`
[1] NA

$`bols(AFS)`
[1] NA

$`bols(DWC)`
[1] NA

$`bols(LOG)`
[1] NA

> 
> # Variable selection in a GLM with small df spatial component
> fm <- SG4 ~ bols(GST) + bols(DBH) + bols(AOT) + bols(AFS) + bols(DWC) +
+             bols(LOG) + bspatial(x_gk, y_gk, df=1, differences=1, xknots=12,
+               yknots=12, center=TRUE)
> sp <- gamboost(fm, data = birds, family = Poisson(), control = bcr)
Error in Xna %*% coef : non-conformable arguments
Calls: gamboost ... gamboost_fit -> mean -> fitted -> fitted.basefit -> <Anonymous>
Execution halted
