
R version 2.5.0 Under development (unstable) (2006-12-04 r40121)
Copyright (C) 2006 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> require("mboost")
Loading required package: mboost
Loading required package: modeltools
Loading required package: party
Loading required package: survival
Loading required package: splines
Loading required package: grid
Loading required package: coin
Loading required package: mvtnorm
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 rapply 

Loading required package: sandwich
Loading required package: strucchange
Loading required package: vcd
Loading required package: MASS
Loading required package: colorspace
[1] TRUE
> 
> set.seed(290875)
> 
> ### predict did not return factor levels for blackboost models
> dummy <- data.frame(y = gl(2, 100), x = runif(200))
> pr <- predict(blackboost(y ~ x, data = dummy, family = Binomial()), 
+               newdata = dummy, type = "response")
> stopifnot(is.factor(pr) && all(levels(pr) %in% levels(dummy$y)))
> 
> ### predict for g{al}mboost.matrix did not work
> ctrl <- boost_control(mstop = 10)
> gb <- glmboost(x = cbind(1, dummy$x), y = dummy$y, family = Binomial(), 
+                control = ctrl)
> stopifnot(all.equal(predict(gb), predict(gb, newdata = cbind(1, dummy$x))))
> 
> gb <- gamboost(x = cbind(1, dummy$x), y = dummy$y, family = Binomial(), 
+                control = ctrl)
> stopifnot(all.equal(predict(gb), predict(gb, newdata = cbind(1, dummy$x))))
> 
> 
