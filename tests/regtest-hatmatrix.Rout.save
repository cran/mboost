
R version 2.9.0 alpha (2009-03-22 r48193)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("mboost")
Loading required package: modeltools
Loading required package: stats4
Loading required package: party
Loading required package: survival
Loading required package: splines
Loading required package: grid
Loading required package: coin
Loading required package: mvtnorm
Loading required package: zoo

Attaching package: 'zoo'


	The following object(s) are masked from package:base :

	 as.Date.numeric 

Loading required package: sandwich
Loading required package: strucchange
Loading required package: vcd
Loading required package: MASS
Loading required package: colorspace
> 
> set.seed(290875)
> 
> df <- function(n = 100) {
+     x <- matrix(runif(n * 10), ncol = 10)
+     y <- x %*% c(1:3, rep(0, 7)) + rnorm(n)
+     data.frame(y = y, x)
+ }
> 
> mydf <- df()
> 
> w <- c(rep(0, 50), rep(1, 50))
> mod <- glmboost(y ~ ., data = mydf, weights = w)
> 
> ### hat matrix: fast for linear models
> H <- attr(hatvalues(mod), "hatmatrix")
> stopifnot(max(abs(H %*% (mydf$y - weighted.mean(mydf$y, w)) - fitted(mod) + weighted.mean(mydf$y, w))) < 
+           sqrt(.Machine$double.eps))
> 
> ### hat matrix: less faster but in C
> H <- attr(mboost:::hatvalues.gb(mod), "hatmatrix")
> stopifnot(max(abs(H %*% (mydf$y - weighted.mean(mydf$y, w)) - fitted(mod) + weighted.mean(mydf$y, w))) < 
+           sqrt(.Machine$double.eps))
> 
> ### hat matrix: directly in R
> mod$family <- Laplace()
> H <- attr(mboost:::hatvalues.gb(mod), "hatmatrix")
> stopifnot(max(abs(H %*% (mydf$y - weighted.mean(mydf$y, w)) - fitted(mod) + weighted.mean(mydf$y, w))) < 
+           sqrt(.Machine$double.eps))
> 
